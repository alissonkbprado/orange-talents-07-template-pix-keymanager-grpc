buildscript{
    dependencies{
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.5.21"
    id("org.jetbrains.kotlin.kapt") version "1.5.21"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.4"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.5.21"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.5.21"
    id("com.google.protobuf") version "0.8.15"
}

apply plugin: "kotlin-noarg"
apply plugin: "kotlin-allopen"

allOpen{
    annotation("jakarta.inject.Singleton")
    annotation("io.micronaut.http.annotation.Controller")
//    annotations("io.micronaut.http.client.annotation.Client")
}

version = "0.1"
group = "br.com.zup.academy.alissonprado"

repositories {
    mavenCentral()
}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("br.com.zup.academy.alissonprado.*")
    }
}


dependencies {
    kapt("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.grpc:micronaut-grpc-runtime")
//    implementation("io.micronaut.grpc:micronaut-grpc-client-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")
//    implementation("org.hibernate:hibernate-validator:7.0.1.Final")

    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("io.micronaut.xml:micronaut-jackson-xml")

    implementation("io.micronaut:micronaut-http-client")

    implementation 'org.jasypt:jasypt:1.9.3'




    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("com.h2database:h2")
    testImplementation("org.mockito:mockito-core:3.0.8")
//    testImplementation("org.mockito.kotlin:mockito-kotlin:3.2.0")

//    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
//    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.0.2")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")

    /**
     * Test dependencies projeto Especialista
     */
//    kaptTest "io.micronaut:micronaut-inject-java"
//    testImplementation("org.mockito:mockito-core")
//    testImplementation("org.mockito:mockito-junit-jupiter:3.8.0")
//    testImplementation("com.h2database:h2")
//    testImplementation("org.hamcrest:hamcrest-core:2.2")
//    testImplementation("org.testcontainers:junit-jupiter")

}
application {
    mainClass.set("br.com.zup.academy.alissonprado.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }


}
sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.17.2" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.38.0" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
